"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Optional[Node]') -> 'Optional[Node]':
        if root == None:
            return root
        l = [root]
        while(len(l)>0):
            size = len(l)
            while(size>0): 
                rem = l.pop(0)
                if size==1:
                    rem.next = None
                    if rem.left != None:
                        l.append(rem.left)
                    if rem.right != None:
                        l.append(rem.right)
                    size -= 1
                    continue
                rem.next = l[0]
                if rem.left != None:
                    l.append(rem.left)
                if rem.right != None:
                    l.append(rem.right)
                size -= 1
        return root
